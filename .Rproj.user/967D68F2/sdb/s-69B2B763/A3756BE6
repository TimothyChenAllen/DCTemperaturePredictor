{
    "contents" : "# This Application allows the user to input a date, and uses 1996-2000\n# data from NOAA's National Climatic Data Center to predict\n# the mean, minimum, and maximum temperature, as well as displaying the\n# historical minimum and maximum temperatures for those years.\n\n# 1) Load Libraries\nrequire(shiny)\nrequire(ggplot2)\nrequire(dplyr)\nrequire(lubridate)\nrequire(scales)\n\n# 2) Process DC National Airport Climate Data 1996-2016\n# from National Airport Station Global Historical Climatology Network (GHSN)\n# http://ncdc.noaa.gov\n# Fields:\n# DATE - YYYYMMDD format\n# TMAX - Maximum temperature in Celsius degrees to tenths\n# TMIN - Minimum temperature in Celsius degrees to tenths\ndc.raw <- read.csv(\"dc_air_temperature_1996-2016.csv\")\n\n# 3) Create columns for mean, min, and max, and day of year\ndc <- dc.raw %>% \n  mutate(DATE=ymd(DATE)) %>%\n  mutate(Year=year(DATE), Month=month(DATE), Day=day(DATE)) %>%\n  mutate(Day.of.year=yday(DATE)) %>%\n  mutate(Temp.C.max=TMAX/10, Temp.C.min=TMIN/10) %>%\n  mutate(Temp.C.mean=(Temp.C.max+Temp.C.min)/2)\n\n# 4) We want a single dataframe with 366 rows, one for each day of the\n# year.  First, we calculate the minimum minimum and maximum maximum for\n# each day of the year\nsuperlative.days <- data.frame()\nfor (d in 1:366) {\n  day.to.consider <- dc[dc$Day.of.year==d,]\n  max.day <- day.to.consider[which.max(day.to.consider$TMAX),]\n  min.day <- day.to.consider[which.min(day.to.consider$TMAX),]\n  superlative.days <- rbind(superlative.days, \n                            data.frame(Day.of.year=d,\n                                       Month=month(max.day$Month, label=TRUE), Day=max.day$Day,\n                                       Historic.max.day=max.day$DATE,\n                                       Historic.max=max.day$Temp.C.max,\n                                       Historic.min.day=min.day$DATE,\n                                       Historic.min=min.day$Temp.C.max\n                            ))\n}\n\n# 5) Now, we calculate the mean minimum, maximum, and mean temperatures for\n# each day of the year.\naverage.days <- dc %>%\n  group_by(Day.of.year) %>%\n  summarize(mean.max=mean(Temp.C.max), \n            mean.min=mean(Temp.C.min), \n            mean.mean=mean(Temp.C.mean)) %>%\n  select(Day.of.year, mean.max, mean.min, mean.mean)\n\n# 6) We now merge these superlative and average days into a single dataframe\nmerged.days <- merge(average.days, superlative.days)\n\n# Here are some utility functions:\n# Celsius to Fahrenheit converter\nfahr <- function(C) {\n  C * 9/5 + 32\n}\n\n# Breaks for the beginnings of each month\nmonth.breaks <- yday(as.Date(paste(\"2016\", sprintf(\"%02d\",1:12), \"01\", sep=\"-\")))\nmonth.labels <- c(\"Jan\",\"Feb\",\"Mar\",\"Apr\",\"May\",\"Jun\",\"Jul\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\")\n\n# 7) Finally, here is the actual Shiny Server which created the predictions\n# based on the date.  We use ggplot2 to output the prediction.\nshinyServer(function(input, output) {\n  output$tempPlot <- renderPlot({\n    yd <- yday(as.Date(input$userDay))\n    display <- merged.days %>% filter(Day.of.year==yd) %>%\n      select(Month, Day, mean.mean, mean.max, mean.min, \n             Historic.max.day, Historic.max, \n             Historic.min.day, Historic.min)\n    \n    msg <- paste(\n      input$userDay, \"\\n\",\n      \"Predicted Temp:\", round(display$mean.mean,1), \"C /\", round(fahr(display$mean.mean),1), \"F\\n\",\n      \"Predicted Range:\", round(display$mean.min,1), \"to\", round(display$mean.max,1), \"C /\",\n      round(fahr(display$mean.min),1), \"to\", round(fahr(display$mean.max),1), \"F\\n\",\n      \"Historic Minimum:\", round(display$Historic.min,1), \"C /\",\n      round(fahr(display$Historic.min),1),\"F on\", display$Historic.min.day, \"\\n\",\n      \"Historic Maximum:\", round(display$Historic.max,1), \"C /\",\n      round(fahr(display$Historic.max),1),\"F on\", display$Historic.max.day, \"\\n\",\n      \"(1996-2016 Data from http://ncdc.noaa.gov)\"\n    )\n    \n    ggplot(merged.days) +\n      geom_point(aes(x=Day.of.year, y=Historic.max), pch=21, fill=\"white\", color=\"red\") + \n      geom_point(aes(x=Day.of.year, y=Historic.min), pch=21, fill=\"white\", color=\"blue\") + \n      geom_errorbar(aes(ymin=mean.min, ymax=mean.max, position=mean.mean, x=Day.of.year, color=mean.mean)) +\n      geom_line(aes(x=Day.of.year, y=mean.mean), color=\"black\", lwd=2) +\n      geom_vline(xintercept=yd, color=\"green\", lwd=2) +\n      geom_text(aes(x=150, y=10, label=msg, vjust=\"outward\", hjust=\"inward\")) +\n      scale_y_continuous(name=\"Temperature (C)\") +\n      scale_x_continuous(name=\"Day of the Year\", breaks=month.breaks, labels=month.labels) +\n      scale_color_gradient2(low=muted(\"blue\"),mid=muted(\"blue\"),high=muted(\"red\")) +\n      guides(color=FALSE) +\n      theme_bw()\n  })\n})",
    "created" : 1454134448656.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2129185836",
    "id" : "A3756BE6",
    "lastKnownWriteTime" : 1454278330,
    "path" : "C:/Users/Tim/OneDrive/Documents/R/Coursera/DataProductsProject/server.R",
    "project_path" : "server.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}